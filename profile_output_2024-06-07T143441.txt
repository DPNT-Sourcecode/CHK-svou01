Timer unit: 1e-09 s

Total time: 0.0003 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: find_best_deal at line 120

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   120                                           @line_profiler.profile
   121                                           def find_best_deal(
   122                                               quantities: Quantities,
   123                                               *,
   124                                               offers: frozenset[Offer] = OFFERS,
   125                                           ) -> Optional[Deal]:
   126                                           
   127         1          0.0      0.0      0.0      @dataclass
   128         1     290000.0 290000.0     96.7      class Scenario:
   129                                                   quantities: Quantities
   130                                                   applied_offers: set[Offer]
   131                                                   available_offers: frozenset[Offer]
   132                                               
   133         1      10000.0  10000.0      3.3      queue = Queue()
   134         1          0.0      0.0      0.0      queue.enqueue(Scenario(quantities, set(), offers))
   135                                           
   136                                               best_price = math.infinity
   137                                               best_deal = None
   138                                           
   139                                               while not queue.isEmpty():
   140                                                   scenario = queue.get()
   141                                           
   142                                                   if all(quantity == 0 for quantity in scenario.quantities.values()):
   143                                                       deal = FrozenList(list(scenario.applied_offers))
   144                                                       deal.freeze()
   145                                                       price = get_deal_price(deal)
   146                                                       if price < best_price:
   147                                                           best_price = price
   148                                                           best_deal = deal
   149                                           
   150                                                   applicable_offers = frozenset(
   151                                                       offer for offer in scenario.available_offers if quantities_geq(
   152                                                           scenario.quantities,
   153                                                           offer.requires_quantities
   154                                                       )
   155                                                   )
   156                                           
   157                                                   for offer in applicable_offers:
   158                                                       new_quantities = {**quantities}
   159                                                       for included_sku, included_quantity in offer.includes.items():
   160                                                           if included_sku in new_quantities:
   161                                                               new_quantities[included_sku] = max(
   162                                                                   0, new_quantities[included_sku] - included_quantity
   163                                                               )
   164                                           
   165                                                       queue.enqueue(Scenario(
   166                                                           frozendict(new_quantities),
   167                                                           set([offer]).union(scenario.applied_offers),
   168                                                           applicable_offers
   169                                                       ))
   170                                           
   171                                               return best_deal

  0.00 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:120 - find_best_deal
