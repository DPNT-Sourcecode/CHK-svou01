Timer unit: 1e-09 s

Total time: 2e-05 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: quantities_geq at line 25

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    25                                           @cache
    26                                           @line_profiler.profile
    27                                           def quantities_geq(lhs: Quantities, rhs: Quantities) -> bool:
    28        58       9000.0    155.2     45.0      for sku, quantity in rhs.items():
    29        41       7000.0    170.7     35.0          if sku not in lhs or lhs[sku] < quantity:
    30        24       2000.0     83.3     10.0              return False
    31        17       2000.0    117.6     10.0      return True

Total time: 0.000428 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: find_best_deal at line 119

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   119                                           @line_profiler.profile
   120                                           def find_best_deal(
   121                                               quantities: Quantities,
   122                                               *,
   123                                               offers: Iterable[Offer] = OFFERS,
   124                                           ) -> Optional[Deal]:
   125                                           
   126         1       1000.0   1000.0      0.2      @dataclass
   127         1     252000.0 252000.0     58.9      class Scenario:
   128                                                   quantities: Quantities
   129                                                   deal: Deal
   130                                                   available_offers: set[Offer]
   131                                               
   132         1          0.0      0.0      0.0      queue = SimpleQueue()
   133         1       1000.0   1000.0      0.2      queue.put(Scenario(quantities, [], offers))
   134                                           
   135         1          0.0      0.0      0.0      best_price = math.inf
   136         1          0.0      0.0      0.0      best_deal = None
   137                                           
   138        19       4000.0    210.5      0.9      while True:
   139        19       3000.0    157.9      0.7          try:
   140        19       5000.0    263.2      1.2              scenario = queue.get_nowait()
   141         1          0.0      0.0      0.0          except Empty:
   142         1          0.0      0.0      0.0              break
   143                                                       
   144        18      12000.0    666.7      2.8          if all(quantity == 0 for quantity in scenario.quantities.values()):
   145                                                       price = get_deal_price(scenario.deal)
   146                                                       if price < best_price:
   147                                                           best_price = price
   148                                                           best_deal = scenario.deal
   149                                                       continue
   150                                           
   151        36       6000.0    166.7      1.4          applicable_offers = (
   152        18       1000.0     55.6      0.2              offer for offer in scenario.available_offers if quantities_geq(
   153                                                           scenario.quantities,
   154                                                           offer.requires_quantities
   155                                                       )
   156                                                   )
   157                                           
   158        35      98000.0   2800.0     22.9          for offer in applicable_offers:
   159        17       4000.0    235.3      0.9              new_quantities = scenario.quantities.copy()
   160        35       6000.0    171.4      1.4              for included_sku, included_quantity in offer.includes.items():
   161        18       3000.0    166.7      0.7                  if included_sku in new_quantities:
   162        36      14000.0    388.9      3.3                      new_quantities.set(included_sku, max(
   163        18       1000.0     55.6      0.2                          0, new_quantities[included_sku] - included_quantity
   164                                                               ))
   165                                                       
   166        34      11000.0    323.5      2.6              queue.put(Scenario(
   167        17       2000.0    117.6      0.5                  frozendict(new_quantities),
   168        17       3000.0    176.5      0.7                  [offer, *scenario.deal],
   169        17       1000.0     58.8      0.2                  applicable_offers
   170                                                       ))
   171                                           
   172         1          0.0      0.0      0.0      return best_deal

  0.00 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:25 - quantities_geq
  0.00 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:119 - find_best_deal
