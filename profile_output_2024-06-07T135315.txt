Timer unit: 1e-09 s

Total time: 2.3e-05 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: quantities_geq at line 24

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    24                                           @cache
    25                                           @line_profiler.profile
    26                                           def quantities_geq(lhs: Quantities, rhs: Quantities) -> bool:
    27        57       9000.0    157.9     39.1      for sku, quantity in rhs.items():
    28        41       6000.0    146.3     26.1          if sku not in lhs or lhs[sku] < quantity:
    29        25       6000.0    240.0     26.1              return False
    30        16       2000.0    125.0      8.7      return True

Total time: 9.8e-05 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: find_best_deal at line 119

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   119                                           @cache
   120                                           @line_profiler.profile
   121                                           def find_best_deal(
   122                                               quantities: Quantities,
   123                                               *,
   124                                               offers: frozenset[Offer] = OFFERS
   125                                           ) -> Optional[Deal]:
   126         1       3000.0   3000.0      3.1      if all(quantity == 0 for quantity in quantities.values()):
   127                                                   empty = FrozenList([])
   128                                                   empty.freeze()
   129                                                   return empty
   130                                           
   131         1      89000.0  89000.0     90.8      applicable_offers = set(offer for offer in offers if quantities_geq(quantities, offer.requires_quantities))
   132                                           
   133         1          0.0      0.0      0.0      best_deal = None
   134         1          0.0      0.0      0.0      best_price = math.inf
   135         1          0.0      0.0      0.0      for offer in applicable_offers:
   136         1       2000.0   2000.0      2.0          new_quantities = {**quantities}
   137         2          0.0      0.0      0.0          for included_sku, included_quantity in offer.includes.items():
   138         1          0.0      0.0      0.0              if included_sku in new_quantities:
   139         2       1000.0    500.0      1.0                  new_quantities[included_sku] = max(
   140         1          0.0      0.0      0.0                      0, new_quantities[included_sku] - included_quantity
   141                                                           )
   142         1       1000.0   1000.0      1.0          new_quantities = frozendict(new_quantities)
   143                                           
   144         1       2000.0   2000.0      2.0          rest_of_deal = find_best_deal(new_quantities, offers=applicable_offers)
   145                                                   if rest_of_deal is None:
   146                                                       continue
   147                                           
   148                                                   new_deal = FrozenList([offer, *rest_of_deal])
   149                                                   new_deal.freeze()
   150                                           
   151                                                   if (new_deal_price := get_deal_price(new_deal)) < best_price:
   152                                                       best_price = new_deal_price
   153                                                       best_deal = new_deal
   154                                           
   155                                               return best_deal

  0.00 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:24 - quantities_geq
  0.00 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:119 - find_best_deal
