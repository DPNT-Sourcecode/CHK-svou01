Timer unit: 1e-09 s

Total time: 3.3e-05 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: quantities_geq at line 25

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    25                                           @cache
    26                                           @line_profiler.profile
    27                                           def quantities_geq(lhs: Quantities, rhs: Quantities) -> bool:
    28        67      19000.0    283.6     57.6      for sku, quantity in rhs.items():
    29        41       9000.0    219.5     27.3          if sku not in lhs or lhs[sku] < quantity:
    30        15       1000.0     66.7      3.0              return False
    31        26       4000.0    153.8     12.1      return True

Total time: 4.96426 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: find_best_deal at line 141

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   141                                           @cache
   142                                           @line_profiler.profile
   143                                           def find_best_deal(
   144                                               quantities: Quantities,
   145                                               *,
   146                                               offers: frozenset[Offer] = OFFERS,
   147                                               daemonic: bool = False,
   148                                           ) -> Optional[Deal]:
   149         1       2000.0   2000.0      0.0      if all(quantity == 0 for quantity in quantities.values()):
   150                                                   empty = FrozenList([])
   151                                                   empty.freeze()
   152                                                   return empty
   153                                           
   154         1     113000.0 113000.0      0.0      applicable_offers = frozenset(offer for offer in offers if quantities_geq(quantities, offer.requires_quantities))
   155                                           
   156         1       1000.0   1000.0      0.0      deal_finder = partial(find_best_deal_applying_offer, quantities, applicable_offers)
   157         1          0.0      0.0      0.0      if daemonic:
   158                                                   results = (deal_finder(offer) for offer in applicable_offers)
   159                                               else:
   160         2   85657000.0    4e+07      1.7          with Pool(12) as pool:
   161         1 4878483000.0    5e+09     98.3              results = pool.map(deal_finder, applicable_offers)
   162                                               
   163                                               results = list(filter(lambda result: result is not None, results))
   164                                           
   165                                               if len(results) == 0:
   166                                                   return None
   167                                           
   168                                               return min(results, key=lambda result: result[1])[0]

  0.00 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:25 - quantities_geq
  4.96 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:141 - find_best_deal
