Timer unit: 1e-09 s

Total time: 2.5e-05 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: quantities_geq at line 25

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    25                                           @cache
    26                                           @line_profiler.profile
    27                                           def quantities_geq(lhs: Quantities, rhs: Quantities) -> bool:
    28        58       7000.0    120.7     28.0      for sku, quantity in rhs.items():
    29        41      13000.0    317.1     52.0          if sku not in lhs or lhs[sku] < quantity:
    30        24          0.0      0.0      0.0              return False
    31        17       5000.0    294.1     20.0      return True

Total time: 3.42818 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: find_best_deal at line 119

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   119                                           @line_profiler.profile
   120                                           def find_best_deal(
   121                                               quantities: Quantities,
   122                                               *,
   123                                               offers: frozenset[Offer] = OFFERS,
   124                                           ) -> Optional[Deal]:
   125                                           
   126         1       4000.0   4000.0      0.0      @dataclass
   127         1     346000.0 346000.0      0.0      class Scenario:
   128                                                   quantities: Quantities
   129                                                   deal: Deal
   130                                                   available_offers: frozenset[Offer]
   131                                               
   132         1       2000.0   2000.0      0.0      queue = SimpleQueue()
   133         1       2000.0   2000.0      0.0      queue.put(Scenario(quantities, [], offers))
   134                                           
   135         1       2000.0   2000.0      0.0      best_price = math.inf
   136         1          0.0      0.0      0.0      best_deal = None
   137                                           
   138     51674   11010000.0    213.1      0.3      while True:
   139     51674    4521000.0     87.5      0.1          try:
   140     51674   10760000.0    208.2      0.3              scenario = queue.get_nowait()
   141                                                   except Empty:
   142                                                       break
   143                                                       
   144     51674   33627000.0    650.8      1.0          if all(quantity == 0 for quantity in scenario.quantities.values()):
   145                                                       price = get_deal_price(scenario.deal)
   146                                                       if price < best_price:
   147                                                           best_price = price
   148                                                           best_deal = scenario.deal
   149                                                       continue
   150                                           
   151    103348  450928000.0   4363.2     13.2          applicable_offers = frozenset(
   152     51674    5514000.0    106.7      0.2              offer for offer in scenario.available_offers if quantities_geq(
   153                                                           scenario.quantities,
   154                                                           offer.requires_quantities
   155                                                       )
   156                                                   )
   157                                           
   158    930128  128351000.0    138.0      3.7          for offer in applicable_offers:
   159    878455  127196000.0    144.8      3.7              new_quantities = scenario.quantities.copy()
   160   1808583  357238000.0    197.5     10.4              for included_sku, included_quantity in offer.includes.items():
   161    930128  103497000.0    111.3      3.0                  if included_sku in new_quantities:
   162   1860256  637943000.0    342.9     18.6                      new_quantities.set(included_sku, max(
   163    930128  114392000.0    123.0      3.3                          0, new_quantities[included_sku] - included_quantity
   164                                                               ))
   165                                                       
   166   1756910 1136186000.0    646.7     33.1              queue.put(Scenario(
   167    878455   99339000.0    113.1      2.9                  frozendict(new_quantities),
   168    878455  136213000.0    155.1      4.0                  [offer, *scenario.deal],
   169    878455   71105000.0     80.9      2.1                  applicable_offers
   170                                                       ))
   171                                           
   172                                               return best_deal

  0.00 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:25 - quantities_geq
  3.43 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:119 - find_best_deal
