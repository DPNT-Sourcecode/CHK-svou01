Timer unit: 1e-09 s

Total time: 0.010055 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: quantities_geq at line 25

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    25                                           @cache
    26                                           @line_profiler.profile
    27                                           def quantities_geq(lhs: Quantities, rhs: Quantities) -> bool:
    28     32889    4972000.0    151.2     49.4      for sku, quantity in rhs.items():
    29     16581    3252000.0    196.1     32.3          if sku not in lhs or lhs[sku] < quantity:
    30       273      67000.0    245.4      0.7              return False
    31     16308    1764000.0    108.2     17.5      return True

Total time: 4.43316 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: process_scenario at line 126

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   126                                           @line_profiler.profile
   127                                           def process_scenario(
   128                                               scenario: Scenario,
   129                                               job_queue: multiprocessing.Queue,
   130                                               result_queue: multiprocessing.Queue,
   131                                           ) -> None:
   132      3031    3855000.0   1271.9      0.1      if all(quantity == 0 for quantity in scenario.quantities.values()):
   133                                                   result_queue.put(scenario.deal)
   134                                                   return
   135                                           
   136      6062   70551000.0  11638.2      1.6      applicable_offers = list(
   137      3031     375000.0    123.7      0.0          offer for offer in scenario.available_offers if quantities_geq(
   138                                                       scenario.quantities,
   139                                                       offer.requires_quantities
   140                                                   )
   141                                               )
   142                                           
   143     53942   12014000.0    222.7      0.3      for offer in applicable_offers:
   144     50912   16955000.0    333.0      0.4          new_quantities = scenario.quantities.copy()
   145    104793   23681000.0    226.0      0.5          for included_sku, included_quantity in offer.includes.items():
   146     53881    8207000.0    152.3      0.2              if included_sku in new_quantities:
   147    107762   22948000.0    213.0      0.5                  new_quantities = new_quantities.set(
   148     53881    5052000.0     93.8      0.1                      included_sku,
   149    107762   20389000.0    189.2      0.5                      max(
   150     53881    5609000.0    104.1      0.1                          0,
   151     53881    9960000.0    184.9      0.2                          new_quantities.get(included_sku) - included_quantity
   152                                                               )
   153                                                           )
   154                                                   
   155    101824 4213835000.0  41383.5     95.1          job_queue.put(Scenario(
   156     50912    6989000.0    137.3      0.2              frozendict(new_quantities),
   157     50912    8186000.0    160.8      0.2              [offer, *scenario.deal],
   158     50912    4554000.0     89.4      0.1              applicable_offers
   159                                                   ))

Total time: 4.91483 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: find_best_deal at line 161

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   161                                           @line_profiler.profile
   162                                           def find_best_deal(
   163                                               quantities: Quantities,
   164                                               *,
   165                                               offers: Iterable[Offer] = OFFERS,
   166                                               sync: bool = False
   167                                           ) -> Optional[Deal]:
   168                                               
   169                                           
   170         1   71102000.0    7e+07      1.4      manager = multiprocessing.Manager()
   171         1    1025000.0    1e+06      0.0      job_queue = manager.Queue()
   172         1     401000.0 401000.0      0.0      result_queue = manager.Queue()
   173                                               
   174         1     315000.0 315000.0      0.0      job_queue.put(Scenario(quantities, [], offers))
   175                                           
   176         1       4000.0   4000.0      0.0      best_price = math.inf
   177         1          0.0      0.0      0.0      best_deal = None
   178                                           
   179         1          0.0      0.0      0.0      handles = []
   180                                           
   181         2   12495000.0    6e+06      0.3      with multiprocessing.Pool() as pool:
   182      3031     747000.0    246.5      0.0          while True:
   183      3031     291000.0     96.0      0.0              try:
   184      3031  248182000.0  81881.2      5.0                  scenario = job_queue.get_nowait()
   185                                           
   186      3031     529000.0    174.5      0.0                  if sync:
   187      3031 4579740000.0    2e+06     93.2                      process_scenario(scenario, job_queue, result_queue)
   188                                                           else:
   189                                                               handle = pool.apply_async(process_scenario, (scenario, job_queue, result_queue))
   190                                                               handles.append(
   191                                                                   handle
   192                                                               )
   193         1          0.0      0.0      0.0              except Empty:
   194                                                           for handle in handles:
   195                                                               try:
   196                                                                   handle.get(timeout=0)
   197                                                               except multiprocessing.context.TimeoutError:
   198                                                                   break
   199                                                           else:
   200                                                               break
   201                                                       
   202                                               pool.join()
   203                                               
   204                                               while not result_queue.empty():
   205                                                   deal = result_queue.get()
   206                                                   if deal is not None and (price := get_deal_price(deal)) < best_price:
   207                                                       best_price = price
   208                                                       best_deal = deal
   209                                           
   210                                               return best_deal

  0.01 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:25 - quantities_geq
  4.43 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:126 - process_scenario
  4.91 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:161 - find_best_deal
