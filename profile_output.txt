Timer unit: 1e-09 s

Total time: 2.4e-05 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: quantities_geq at line 25

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    25                                           @cache
    26                                           @line_profiler.profile
    27                                           def quantities_geq(lhs: Quantities, rhs: Quantities) -> bool:
    28        67      11000.0    164.2     45.8      for sku, quantity in rhs.items():
    29        41      11000.0    268.3     45.8          if sku not in lhs or lhs[sku] < quantity:
    30        15          0.0      0.0      0.0              return False
    31        26       2000.0     76.9      8.3      return True

Total time: 0.111253 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: find_best_deal at line 141

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   141                                           @cache
   142                                           @line_profiler.profile
   143                                           def find_best_deal(
   144                                               quantities: Quantities,
   145                                               *,
   146                                               offers: frozenset[Offer] = OFFERS
   147                                           ) -> Optional[Deal]:
   148         1       2000.0   2000.0      0.0      if all(quantity == 0 for quantity in quantities.values()):
   149                                                   empty = FrozenList([])
   150                                                   empty.freeze()
   151                                                   return empty
   152                                           
   153         1      97000.0  97000.0      0.1      applicable_offers = frozenset(offer for offer in offers if quantities_geq(quantities, offer.requires_quantities))
   154                                           
   155         2   56476000.0    3e+07     50.8      with Pool(5) as pool:
   156         1   54678000.0    5e+07     49.1          results = pool.map(partial(find_best_deal_applying_offer, quantities, applicable_offers), applicable_offers)
   157                                           
   158                                               results = filter(results, lambda result: result is not None)
   159                                           
   160                                               if len(results) == 0:
   161                                                   return None
   162                                           
   163                                               return min(results, key=lambda result: result[1])[0]

  0.00 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:25 - quantities_geq
  0.11 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:141 - find_best_deal
