Timer unit: 1e-09 s

Total time: 0.090691 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: quantities_geq at line 24

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    24                                           @cache
    25                                           @line_profiler.profile
    26                                           def quantities_geq(lhs: Quantities, rhs: Quantities) -> bool:
    27    253276   40414000.0    159.6     44.6      for sku, quantity in rhs.items():
    28    168758   29899000.0    177.2     33.0          if sku not in lhs or lhs[sku] < quantity:
    29     84240   11507000.0    136.6     12.7              return False
    30     84518    8871000.0    105.0      9.8      return True

Total time: 3.86274 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: find_best_deal at line 119

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   119                                           @cache
   120                                           @line_profiler.profile
   121                                           def find_best_deal(
   122                                               quantities: Quantities,
   123                                               *,
   124                                               offers: frozenset[Offer] = OFFERS
   125                                           ) -> Optional[Deal]:
   126     84240   84778000.0   1006.4      2.2      if all(quantity == 0 for quantity in quantities.values()):
   127        14       9000.0    642.9      0.0          empty = FrozenList([])
   128        14       2000.0    142.9      0.0          empty.freeze()
   129        14       3000.0    214.3      0.0          return empty
   130                                           
   131     84226  686349000.0   8148.9     17.8      applicable_offers = frozenset(offer for offer in offers if quantities_geq(quantities, offer.requires_quantities))
   132                                           
   133     84226    8503000.0    101.0      0.2      best_deal = None
   134     84226   10332000.0    122.7      0.3      best_price = math.inf
   135    600587   95135000.0    158.4      2.5      for offer in applicable_offers:
   136    516382  493136000.0    955.0     12.8          new_quantities = {**quantities}
   137   1032764  189209000.0    183.2      4.9          for included_sku, included_quantity in offer.includes.items():
   138    516382   62488000.0    121.0      1.6              if included_sku in new_quantities:
   139   1032764  172804000.0    167.3      4.5                  new_quantities[included_sku] = max(
   140    516382   62072000.0    120.2      1.6                      0, new_quantities[included_sku] - included_quantity
   141                                                           )
   142    516382  153962000.0    298.2      4.0          new_quantities = frozendict(new_quantities)
   143                                           
   144    516382  906115000.0   1754.7     23.5          rest_of_deal = find_best_deal(new_quantities, offers=applicable_offers)
   145    516362   63898000.0    123.7      1.7          if rest_of_deal is None:
   146                                                       continue
   147                                           
   148    516362  155824000.0    301.8      4.0          new_deal = FrozenList([offer, *rest_of_deal])
   149    516362   63840000.0    123.6      1.7          new_deal.freeze()
   150                                           
   151    516362  619468000.0   1199.7     16.0          if (new_deal_price := get_deal_price(new_deal)) < best_price:
   152     84214    8550000.0    101.5      0.2              best_price = new_deal_price
   153     84214   14613000.0    173.5      0.4              best_deal = new_deal
   154                                           
   155     84205   11653000.0    138.4      0.3      return best_deal

  0.09 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:24 - quantities_geq
  3.86 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:119 - find_best_deal
