Timer unit: 1e-09 s

Total time: 0.082094 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: quantities_geq at line 25

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    25                                           @cache
    26                                           @line_profiler.profile
    27                                           def quantities_geq(lhs: Quantities, rhs: Quantities) -> bool:
    28    277529   39648000.0    142.9     48.3      for sku, quantity in rhs.items():
    29    147353   26242000.0    178.1     32.0          if sku not in lhs or lhs[sku] < quantity:
    30     17177    2388000.0    139.0      2.9              return False
    31    130176   13816000.0    106.1     16.8      return True

Total time: 3.52208 s
File: /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py
Function: find_best_deal at line 119

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   119                                           @line_profiler.profile
   120                                           def find_best_deal(
   121                                               quantities: Quantities,
   122                                               *,
   123                                               offers: Iterable[Offer] = OFFERS,
   124                                           ) -> Optional[Deal]:
   125                                           
   126         1       1000.0   1000.0      0.0      @dataclass
   127         1     348000.0 348000.0      0.0      class Scenario:
   128                                                   quantities: Quantities
   129                                                   deal: Deal
   130                                                   available_offers: set[Offer]
   131                                               
   132         1       1000.0   1000.0      0.0      queue = SimpleQueue()
   133         1       2000.0   2000.0      0.0      queue.put(Scenario(quantities, [], offers))
   134                                           
   135         1       1000.0   1000.0      0.0      best_price = math.inf
   136         1          0.0      0.0      0.0      best_deal = None
   137                                           
   138     31843    7180000.0    225.5      0.2      while True:
   139     31843    3078000.0     96.7      0.1          try:
   140     31843   10201000.0    320.4      0.3              scenario = queue.get_nowait()
   141                                                   except Empty:
   142                                                       break
   143                                                                   
   144     31843   43409000.0   1363.2      1.2          if all(quantity == 0 for quantity in scenario.quantities.values()):
   145                                                       price = get_deal_price(scenario.deal)
   146                                                       if price < best_price:
   147                                                           best_price = price
   148                                                           best_deal = scenario.deal
   149                                                       continue
   150                                           
   151     63686  915465000.0  14374.7     26.0          applicable_offers = list(
   152     31843    3374000.0    106.0      0.1              offer for offer in scenario.available_offers if quantities_geq(
   153                                                           scenario.quantities,
   154                                                           offer.requires_quantities
   155                                                       )
   156                                                   )
   157                                           
   158    715612   87713000.0    122.6      2.5          for offer in applicable_offers:
   159    683770  104792000.0    153.3      3.0              new_quantities = scenario.quantities.copy()
   160   1367540  498635000.0    364.6     14.2              for included_sku, included_quantity in offer.includes.items():
   161    683770   83362000.0    121.9      2.4                  if included_sku in new_quantities:
   162   1367540  442128000.0    323.3     12.6                      new_quantities = new_quantities.set(
   163    683770   60471000.0     88.4      1.7                          included_sku,
   164   1367540  203025000.0    148.5      5.8                          max(
   165    683770   61485000.0     89.9      1.7                              0,
   166    683770  109029000.0    159.5      3.1                              new_quantities.get(included_sku) - included_quantity
   167                                                                   )
   168                                                               )
   169                                                       
   170   1367540  637695000.0    466.3     18.1              queue.put(Scenario(
   171    683770   78286000.0    114.5      2.2                  frozendict(new_quantities),
   172    683770  113449000.0    165.9      3.2                  [offer, *scenario.deal],
   173    683770   58953000.0     86.2      1.7                  applicable_offers
   174                                                       ))
   175                                           
   176                                               return best_deal

  0.08 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:25 - quantities_geq
  3.52 seconds - /Users/morgan/jobhunting/iwoca/coding-challenge/accelerate_runner/lib/solutions/CHK/checkout_solution.py:119 - find_best_deal
